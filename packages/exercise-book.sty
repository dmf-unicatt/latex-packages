%%% ================================================================
%%%                     REQUIRED PACKAGES
%%% ================================================================

% For conditional logic and environment patching
\RequirePackage{etoolbox}

% For string comparison and manipulation
\RequirePackage{xstring}

% LaTeX3 programming layer
\RequirePackage{expl3}

% For exercise and solution environments, where use-files is to allow verbatim environments.
% Note that modern LaTeX3 allows "+c" environments that would overcome the need to write
% to an output file and still allow verbatim environments, but xsim hardcodes its own
% environments with the choice "b" instead of "+c".
\RequirePackage[use-files]{xsim}

% To automatically create subdirectory for xsim auxiliary files
\RequirePackage{shellesc}

% To link exercises and solutions
\RequirePackage{hyperref}

% Provides \externaldocument used in combination with the restart option
\RequirePackage{xr-hyper}

% Not required here, but used in the main document. These are put here because otherwise
% the cleveref package import, which is required here, would fail with
% ! Package cleveref Error: cleveref must be loaded after amsmath!.
\RequirePackage{amsmath}
\RequirePackage{amssymb}

% To use \cref in the main document, with custom names for the exercise environments
\RequirePackage[nameinlink]{cleveref}

% Additional packages not really required here, but used in the main document.
\RequirePackage{enumitem}
\RequirePackage{nicefrac}

% Load the tex-notebook package from this same repository for the pycell environment
\RequirePackage{tex-notebook}

%%% ================================================================
%%%                           PACKAGE OPTIONS
%%% ================================================================

\ExplSyntaxOn

% Variables storing the package options
\tl_new:N \l_exercise_book_academic_year_tl
\bool_new:N \l_exercise_book_fullpage_bool
\bool_new:N \l_exercise_book_blackboard_bool
\tl_new:N \l_exercise_book_prefix_tl
\tl_new:N \l_exercise_book_restart_tl

% Define keys and default values
\keys_define:nn { exercise-book }
  {
    academic-year .tl_set:N = \l_exercise_book_academic_year_tl,
    academic-year .initial:n = {0}, % default is year 0

    fullpage .choice:,
    fullpage / true  .code:n = { \bool_set_true:N  \l_exercise_book_fullpage_bool },
    fullpage / false .code:n = { \bool_set_false:N \l_exercise_book_fullpage_bool },
    fullpage .default:n = { true }, % when given without value
    fullpage .initial:n = { false }, % default if not given

    blackboard .choice:,
    blackboard / true  .code:n = { \bool_set_true:N  \l_exercise_book_blackboard_bool },
    blackboard / false .code:n = { \bool_set_false:N \l_exercise_book_blackboard_bool },
    blackboard .default:n = { true }, % when given without value
    blackboard .initial:n = { true }, % default if not given

    prefix .tl_set:N = \l_exercise_book_prefix_tl,
    prefix .initial:n = {}, % default is empty string

    restart .tl_set:N = \l_exercise_book_restart_tl,
    restart .initial:n = {}, % default is empty string
  }

% Set default values
\keys_set:nn { exercise-book }
  { academic-year = 0, fullpage = false, blackboard = true, prefix = {}, restart = {} }

% Process unknown package options as key-values
\DeclareOption*{
  \edef\processoption{\noexpand\keys_set:nn { exercise-book } { \CurrentOption }}
  \processoption
}
\ProcessOptions\relax

\ExplSyntaxOff

%%% ----------------------------------------------------------------
%%% Restart capabilities
%%% ----------------------------------------------------------------

% Write the counters of the last exercise and the last printed exercise at end document
\AtEndDocument{%
  % Open the file
  \newwrite\xsimlastfile
  \immediate\openout\xsimlastfile=\jobname.xsimlast
  % Write counter
  \immediate\write\xsimlastfile{%
    \string\gdef\string\lastprintedexercise{\arabic{printedexercises}}%
  }%
  % Close the file
  \immediate\closeout\xsimlastfile
}

%%% ----------------------------------------------------------------
%%% Label mapping capabilities
%%% ----------------------------------------------------------------

% Declare a new write stream that will be used by \LabelToExercisePrintedCounter
\newwrite\xsimlabelmapfile

% Open the file at begin document
\AtBeginDocument{
  \IfFileExists{\jobname.xsimlabelmap}
    {
      \input{\jobname.xsimlabelmap}
    }
    {}
  \immediate\openout\xsimlabelmapfile=\jobname.xsimlabelmap
}

% Close the file at end document
\AtEndDocument{%
  \immediate\closeout\xsimlabelmapfile
}

%%% ----------------------------------------------------------------
%%% Prefixing capabilities
%%% ----------------------------------------------------------------

\ExplSyntaxOn

% Helper macro to print the prefix
\cs_new:Npn \exercisebookprefix { \tl_use:N \l_exercise_book_prefix_tl }

%%% ----------------------------------------------------------------
%%% Process side effects of options at the beginning of the document
%%% ----------------------------------------------------------------

\AtBeginDocument{
  % Load fullpage package if the option is provided
  \bool_if:NT \l_exercise_book_fullpage_bool
    { \RequirePackage{fullpage} }

  % If blackboard is false, replace academic year with 9999, add watermark, and show labels for debugging
  \bool_if:NF \l_exercise_book_blackboard_bool
    {
      \tl_set:Nn \l_exercise_book_academic_year_tl { 9999 }
      % Add watermark
      \RequirePackage{draftwatermark}
      \SetWatermarkText{Do~not~upload\\on~blackboard!}
      \SetWatermarkScale{0.6}
      % Show labels for debugging
      \RequirePackage{showkeys}
    }

  % If restart is provided and not empty, load the aux file of the other file and start numbering from where
  % the other file left off.
  \tl_if_empty:NF \l_exercise_book_restart_tl
    {
      \IfFileExists{\l_exercise_book_restart_tl.aux}
        {
          \externaldocument{\l_exercise_book_restart_tl}
        }
        {
          \PackageError{exercise-book}
            {Missing~file~`\l_exercise_book_restart_tl.aux'}
            {The~restart~mode~requires~the~.aux~file~of~the~previous~document~to~exist.}
        }
      \IfFileExists{\l_exercise_book_restart_tl.xsimlast}
        {
          \input{\l_exercise_book_restart_tl.xsimlast}
          \setcounter{printedexercises}{\lastprintedexercise}
        }
        {
          \PackageError{exercise-book}
            {Missing~file~`\l_exercise_book_restart_tl.xsimlast'}
            {The~restart~mode~requires~the~.xsimlast~file~of~the~previous~document~to~exist.}
        }
      \IfFileExists{\l_exercise_book_restart_tl.xsimlabelmap}
        {
          \input{\l_exercise_book_restart_tl.xsimlabelmap}
        }
        {
          \PackageError{exercise-book}
            {Missing~file~`\l_exercise_book_restart_tl.xsimlabelmap'}
            {The~restart~mode~requires~the~.xsimlabelmap~file~of~the~previous~document~to~exist.}
        }
    }
}
\ExplSyntaxOff

%%% ================================================================
%%%                     BASE DOCUMENT CONFIGURATION
%%% ================================================================

%%% ----------------------------------------------------------------
%%% Hyperref configuration
%%% ----------------------------------------------------------------

\hypersetup{
  colorlinks=true,     % Use colored text for links instead of boxes
  linkcolor=black,     % Set all colors to black
  citecolor=black,
  urlcolor=black,
  pdfborder={0 0 0},   % Remove border around links
  bookmarksdepth=0     % Disable bookmarks
}

%%% ----------------------------------------------------------------
%%% Section and chapter numbering
%%% ----------------------------------------------------------------

% Display chapters as letters (e.g., "Chapter A")
\renewcommand{\thechapter}{\exercisebookprefix\Alph{chapter}}

% Automatically label chapters (e.g., \label{chap:1})
\makeatletter
\pretocmd{\@makechapterhead}{%
  \label{chap:\exercisebookprefix\arabic{chapter}}%
}{}{}
\makeatother

% Display sections without chapter number (e.g., "2" instead of "A.2")
\renewcommand{\thesection}{\arabic{section}}

% Automatically label sections and subsections
\makeatletter
\NewCommandCopy\exercisebook@oldsection\section
\NewCommandCopy\exercisebook@oldsubsection\subsection
\RenewDocumentCommand{\section}{sm}{
  \IfBooleanTF{#1}
    { \exercisebook@oldsection*{#2} }
    {
      \exercisebook@oldsection{#2}
      \label{sec:\exercisebookprefix\arabic{chapter}.\arabic{section}}
    }
}
\RenewDocumentCommand{\subsection}{sm}{
  \IfBooleanTF{#1}
    { \exercisebook@oldsubsection*{#2} }
    {
      \exercisebook@oldsubsection{#2}
      \label{sec:\exercisebookprefix\arabic{chapter}.\arabic{section}.\arabic{subsection}}
    }
}
\makeatother

%%% ================================================================
%%%                     INTEGRATION WITH XSIM
%%% ================================================================

%%% ----------------------------------------------------------------
%%% Helper: create links to be used in xsim environments and
%%% sectioning environments
%%% ----------------------------------------------------------------

\NewDocumentCommand{\linktoxsimenv}{m m}{%
  \hyperref[#1]{#2}%
}
\NewDocumentCommand{\linktosection}{m}{%
  \nameref{#1}%
}

%%% ----------------------------------------------------------------
%%% xsim verbatim directory configuration
%%% ----------------------------------------------------------------

% Put xsim verbatim files in a subdirectory to avoid cluttering the root path
\ifcase\ShellEscapeStatus
  \PackageError{exercise-book}{Shell escape is disabled}{Must compile with --shell-escape enabled to create a work directory for xsim files}
\or
  \immediate\write18{mkdir -p xsim-files-\jobname}
\or
  \PackageError{exercise-book}{Shell escape is restricted}{Must compile with --shell-escape enabled to create a work directory for xsim files}
\else
  \PackageError{exercise-book}{Unknown shell escape status}{Check your TeX engine.}
\fi

\xsimsetup{
  path=xsim-files-\jobname
}

%%% ----------------------------------------------------------------
%%% Print exercises by default, but not solutions
%%% ----------------------------------------------------------------

\xsimsetup{
  exercise/print = true,
  solution/print = false
}

%%% ----------------------------------------------------------------
%%% Counter for printed exercises
%%% ----------------------------------------------------------------

% Count how many exercises have been printed, in order to have a continuous numbering.
% Indeed, if an exercise is hidden (e.g. by passing print=False), xsim by default would still count it,
% resulting in a gap in the numbering.
\newcounter{printedexercises}

% Store the printed exercises counter as an exercise property
\DeclareExerciseProperty{printedcounter}

% Helper command to determine if exercise will actually be printed
\ExplSyntaxOn
\NewDocumentCommand{\IfExercisePrintT}{mmm}
 {
  \xsim_exercise_if_print:nnT {#1} {#2} {#3}
 }
\ExplSyntaxOff

%%% ----------------------------------------------------------------
%%% Custom properties related to exams
%%% ----------------------------------------------------------------

% Define a property for the exam date, exam problem name and examproblemid
\DeclareExerciseProperty{examdate}
\DeclareExerciseProperty{examproblemnumber}
\DeclareExerciseProperty{examproblemid}

% Define booleans to store property presence
\newif\ifhasSubtitle
\newif\ifhasExamDate
\newif\ifhasExamProblemNumber
\newif\ifhasExamProblemId

% Check consistency of the exam arguments: they are mutually exclusive with subtitle,
% and if provided then all three must be given.
\newcommand{\checkExamArguments}{%
  \GetExercisePropertyTF{subtitle}{\hasSubtitletrue}{\hasSubtitlefalse}%
  \GetExercisePropertyTF{examdate}{\hasExamDatetrue}{\hasExamDatefalse}%
  \GetExercisePropertyTF{examproblemnumber}{\hasExamProblemNumbertrue}{\hasExamProblemNumberfalse}%
  \GetExercisePropertyTF{examproblemid}{\hasExamProblemIdtrue}{\hasExamProblemIdfalse}%
  % Property check: if subtitle present
  \ifhasSubtitle
    % Error if other exam properties also present
    \ifhasExamDate
      \PackageError{exercise-book}{Extra examdate}{Cannot have 'examdate' if 'subtitle' is provided}%
    \fi
    \ifhasExamProblemNumber
      \PackageError{exercise-book}{Extra examproblemnumber}{Cannot have 'examproblemnumber' if 'subtitle' is provided}%
    \fi
    \ifhasExamProblemId
      \PackageError{exercise-book}{Extra examproblemid}{Cannot have 'examproblemid' if 'subtitle' is provided}%
    \fi
  % Property check: if no subtitle, but examdate present
  \else\ifhasExamDate
    % Must have examproblemnumber and examproblemid too
    \ifhasExamProblemNumber
    \else
      \PackageError{exercise-book}{Missing examproblemnumber}{Must have 'examproblemnumber' if 'examdate' is provided}%
    \fi
    \ifhasExamProblemId
    \else
      \PackageError{exercise-book}{Missing examproblemid}{Must have 'examproblemid' if 'examdate' is provided}%
    \fi
  % Property check: if no subtitle or examdate, but examproblemnumber present
  \else\ifhasExamProblemNumber
    % Must have examdate and examproblemid
    \PackageError{exercise-book}{Missing examdate}{Must have 'examdate' if 'examproblemnumber' is provided}%
    \ifhasExamProblemId
    \else
      \PackageError{exercise-book}{Missing examproblemid}{Must have 'examproblemid' if 'examproblemnumber' is provided}%
    \fi
  % Property check: if no subtitle, examdate, or examproblemnumber, but examproblemid present
  \else\ifhasExamProblemId
    % Must have examdate and examproblemnumber
    \PackageError{exercise-book}{Missing examdate and examproblemnumber}{Must have 'examdate' and 'examproblemnumber' if 'examproblemid' is provided}%
  \fi\fi\fi\fi%
}

%%% ----------------------------------------------------------------
%%% Custom heading for exercise and solution
%%% ----------------------------------------------------------------

\renewcommand{\theprintedexercises}{\exercisebookprefix\arabic{printedexercises}}

% Custom exercise heading using paragraph style
\newcommand{\exerciseHeading}[1]{%
  \paragraph{%
    Exercise~\theprintedexercises\normalfont%
    \ifhasSubtitle
      \space(\itshape\GetExerciseProperty{subtitle}).%
    \else
      \ifhasExamDate
        \space\space(\itshape\GetExerciseProperty{examdate}).%
      \else
        .%
      \fi
    \fi
  }%
}
\SetExerciseParameter{exercise}{exercise-heading}{\exerciseHeading}

% Custom solution heading with link back to the exercise
\newcommand{\solutionHeading}[1]{%
  \edef\exref{ex:\exercisebookprefix\GetExerciseProperty{id}}%
  \paragraph{\linktoxsimenv{\exref}{Exercise~\GetExerciseProperty{printedcounter}}\normalfont.}%
}
\SetExerciseParameter{exercise}{solution-heading}{\solutionHeading}

%%% ----------------------------------------------------------------
%%% Track solution presence and allow verbatim content
%%% ----------------------------------------------------------------

% Define a property to track if an exercise has a solution
\DeclareExerciseProperty{hassolution}

% Set the hassolution flag when a solution is provided
\AtBeginEnvironment{solution}{
  \edef\ExerciseType{\csname g_xsim_exercise_type_tl\endcsname}%
  \edef\ExerciseID{\csname g_xsim_exercise_id_tl\endcsname}%
  \SetExerciseProperty{hassolution}{1}%
}

%%% ----------------------------------------------------------------
%%% Definition of a subsection property
%%% ----------------------------------------------------------------

% Store subsection number in exercise metadata
\DeclareExerciseProperty{subsection-value}

%%% ----------------------------------------------------------------
%%% Definition of properties about replacements
%%% ----------------------------------------------------------------

% An exercise can replace one or more other exercises, which will be set to print=false and hidden
\DeclareExerciseProperty{replacedbyexamproblemid}
\DeclareExerciseProperty{replacementsinceacademicyear}

%%% ----------------------------------------------------------------
%%% Begin hooks for exercise and solution
%%% ----------------------------------------------------------------

% Define a mapping from exercise and solution labels to the the printed counter of the exercise.
% Will be used with \cref, and requires at least two compilations.
\makeatletter
\newcommand{\LabelToExercisePrintedCounter}[1]{%
  \immediate\write\xsimlabelmapfile{%
    \noexpand\expandafter
    \gdef\noexpand\csname exercisebook@printedcounter@#1\endcsname{%
      \GetExerciseProperty{printedcounter}%
    }%
  }%
}
\makeatother

% Add a begin-hook to exercise to:
% 1. assert consistency of exam properties
% and, only if exercise is printed:
% 2. increment the printed exercise counter
% 3. attach subsection value
% 4. attach label(s)
% 5. attach notebook name
\xsimsetup{
  exercise/begin-hook = {
    % PART 1: assert consistency of exam properties
    \checkExamArguments{}%

    \IfExercisePrintT{\ExerciseType}{\ExerciseID}{
      % PART 2: increment the printed exercise counter
      \stepcounter{pynotebook}% increment counter of tex-notebook package
      \stepcounter{printedexercises}%
      \expanded{\SetExerciseProperty{printedcounter}{\exercisebookprefix\number\value{printedexercises}}}%
      %
      % PART 3: attach subsection value
      \expanded{\SetExerciseProperty{subsection-value}{\number\value{subsection}}}%
      %
      % PART 4: attach label(s)
      \label{ex:\exercisebookprefix\ExerciseID}%
      \LabelToExercisePrintedCounter{ex:\exercisebookprefix\ExerciseID}%
      \GetExercisePropertyT{examproblemid}{%
        \edef\ExerciseExamProblemID{\GetExerciseProperty{examproblemid}}%
        \label{ex:\ExerciseExamProblemID}%
        \LabelToExercisePrintedCounter{ex:\ExerciseExamProblemID}%
      }%
      %
      % PART 5: attach notebook name to pythontex
      \ifPythonTeXLoaded
      \edef\attachnotebooknametopythontex{\pyc{pytex.notebook_filename = os.path.join(f"notebooks-{pytex.jobname}", f"exercise_\GetExerciseProperty{printedcounter}.ipynb")}}
      \attachnotebooknametopythontex
      \fi
    }%
  }%
}

% Automatically attach label and notebook name to solution
\xsimsetup{
  solution/begin-hook = {%
    \IfExercisePrintT{\ExerciseType}{\ExerciseID}{%
      %
      \label{sol:\exercisebookprefix\ExerciseID}%
      \LabelToExercisePrintedCounter{sol:\exercisebookprefix\ExerciseID}%
      \GetExercisePropertyT{examproblemid}{%
        \edef\ExerciseExamProblemID{\GetExerciseProperty{examproblemid}}%
        \label{sol:\ExerciseExamProblemID}%
        \LabelToExercisePrintedCounter{sol:\ExerciseExamProblemID}%
      }%
      %
      \ifPythonTeXLoaded
      \edef\attachnotebooknametopythontex{\pyc{pytex.notebook_filename = os.path.join(f"notebooks-{pytex.jobname}", f"solution_\GetExerciseProperty{printedcounter}.ipynb")}}
      \attachnotebooknametopythontex
      \fi
    }%
  }%
}

%%% ----------------------------------------------------------------
%%% Apply replacements so that they are used on the next compilation
%%% ----------------------------------------------------------------

\ExplSyntaxOn

% Property to store whether the exercise was replaced
\DeclareExerciseProperty{replaced}

% Function to compute academic year from date string
\seq_new:N \l_acad_year_parts_seq      % For splitting by /
\seq_new:N \l_date_parts_seq           % For splitting by -

\tl_new:N  \l_year_tl
\tl_new:N  \l_month_tl
\tl_new:N  \l_academic_year_tl          % Result token list

\int_new:N \l_year_int
\int_new:N \l_month_int

\cs_new_protected:Npn \__get_academic_year:n #1
  {
    \seq_set_split:Nnn \l_acad_year_parts_seq { / } { #1 }
    \int_compare:nNnTF { \seq_count:N \l_acad_year_parts_seq } = { 1 }
      {
        % Single date case
        \seq_set_split:Nnn \l_date_parts_seq { - } { #1 }
        \seq_pop_left:NN \l_date_parts_seq \l_year_tl
        \seq_pop_left:NN \l_date_parts_seq \l_month_tl

        % Check if tokens are empty or not numeric
        \tl_if_blank:VTF \l_year_tl
          { \tl_set:Nn \l_year_tl { 0 } }
          { }
        \tl_if_blank:VTF \l_month_tl
          { \tl_set:Nn \l_month_tl { 0 } }
          { }

        % Convert tokens to integers safely
        \int_set:Nn \l_year_int { \tl_to_str:N \l_year_tl }
        \int_set:Nn \l_month_int { \tl_to_str:N \l_month_tl }

        \int_compare:nNnTF { \l_month_int } < { 10 }
          {
            \tl_set:Nx \l_academic_year_tl { \int_eval:n { \l_year_int - 1 } }
          }
          {
            \tl_set:Nx \l_academic_year_tl { \l_year_int }
          }
      }
      {
        % Range case
        \seq_pop_left:NN \l_acad_year_parts_seq \l_year_tl
        \tl_set_eq:NN \l_academic_year_tl \l_year_tl
      }
  }

% Do the replacement
\tl_new:N \l_tmp_examproblemid_tl
\tl_new:N \l_tmp_replacedbyexamproblemid_tl
\tl_new:N \l_tmp_replacementsinceacademicyear_tl
\tl_new:N \l_academic_year_examproblemid_tl
\tl_new:N \l_academic_year_replacedbyexamproblemid_tl
\tl_new:N \l_academic_year_replacementsinceacademicyear_tl

\newcommand{\SaveReplacements}
  {
    \ForEachUsedExerciseByType
      {
        % Fetch examproblemid
        \tl_set:Nx \l_tmp_examproblemid_tl
          { \GetExerciseProperty{examproblemid} }
        \tl_if_blank:VF \l_tmp_examproblemid_tl
          {
            % Compute academic year for examproblemid
            \exp_args:No \__get_academic_year:n { \l_tmp_examproblemid_tl }
            \tl_set_eq:NN \l_academic_year_examproblemid_tl \l_academic_year_tl

            % Hide exercises of the current and future academic years
            \int_compare:nT
              {
                \int_eval:n { \tl_to_str:N \l_academic_year_examproblemid_tl }
                >=
                \int_eval:n { \tl_to_str:N \l_exercise_book_academic_year_tl }
              }
              {
                \tl_set:Nx \l_mymsg_tl
                  {
                      Current~academic~year~is~\l_exercise_book_academic_year_tl.
                      Hiding~exercise~\l_tmp_examproblemid_tl \space
                      (academic~year~begin~\l_academic_year_examproblemid_tl) \space
                      because~is~from~an~exam~of~the~current~academic~year~or~a~future~academic~year.
                  }
                \typeout { \tl_use:N \l_mymsg_tl }
                \SetExerciseProperty{print}{false}
              }

            % Do replacements
            \GetExercisePropertyTF { replacedbyexamproblemid }
              {
                \GetExercisePropertyTF { replacementsinceacademicyear }
                  {
                    % Fetch replacedbyexamproblemid
                    \tl_set:Nx \l_tmp_replacedbyexamproblemid_tl
                      { \GetExerciseProperty{replacedbyexamproblemid} }
                    \tl_if_blank:VT \l_tmp_replacedbyexamproblemid_tl
                      {
                        \PackageError{exercise-book}{Empty~replacedbyexamproblemid~for~\l_tmp_examproblemid_tl}{Empty~replacedbyexamproblemid~for~\l_tmp_examproblemid_tl}
                      }

                    % Fetch replacementsinceacademicyear
                    \tl_set:Nx \l_tmp_replacementsinceacademicyear_tl
                      { \GetExerciseProperty{replacementsinceacademicyear} }
                    \tl_if_blank:VT \l_tmp_replacementsinceacademicyear_tl
                      {
                        \PackageError{exercise-book}{Empty~replacementsinceacademicyear~for~\l_tmp_examproblemid_tl}{Empty~replacementsinceacademicyear~for~\l_tmp_examproblemid_tl}
                      }

                    % Compute academic year for replacedbyexamproblemid
                    \exp_args:No \__get_academic_year:n { \l_tmp_replacedbyexamproblemid_tl }
                    \tl_set_eq:NN \l_academic_year_replacedbyexamproblemid_tl \l_academic_year_tl

                    % Compute academic year for replacementsinceacademicyear
                    \exp_args:No \__get_academic_year:n { \l_tmp_replacementsinceacademicyear_tl }
                    \tl_set_eq:NN \l_academic_year_replacementsinceacademicyear_tl \l_academic_year_tl

                    % Summarize for debug
                    \tl_set:Nx \l_mymsg_tl
                      {
                        Current~academic~year~is~\l_exercise_book_academic_year_tl.
                        Examining~exercise~\l_tmp_examproblemid_tl \space
                        (academic~year~begin~\l_academic_year_examproblemid_tl) \space
                        which~may~be~replaced~by~exercise~\l_tmp_replacedbyexamproblemid_tl \space
                        (academic~year~begin~\l_academic_year_replacedbyexamproblemid_tl) \space
                        since~academic~year~\l_tmp_replacementsinceacademicyear_tl \space
                        (academic~year~begin~\l_academic_year_replacementsinceacademicyear_tl). \space
                      }
                    \typeout { \tl_use:N \l_mymsg_tl }

                    % Do replacement if the academic-year package argument is >= than replacementsinceacademicyear
                    \int_compare:nTF
                      {
                        \int_eval:n { \tl_to_str:N \l_exercise_book_academic_year_tl }
                        >=
                        \int_eval:n { \tl_to_str:N \l_academic_year_replacementsinceacademicyear_tl }
                      }
                      {
                        \tl_set:Nx \l_mymsg_tl
                          {
                            \space\space\space\space Replacing~exercise~\l_tmp_examproblemid_tl \space
                            with~exercise~\l_tmp_replacedbyexamproblemid_tl.
                          }
                        \typeout { \tl_use:N \l_mymsg_tl }
                        \SetExerciseProperty{print}{false}
                      }
                      {
                        \tl_set:Nx \l_mymsg_tl
                          {
                            \space\space\space\space Not~replacing~exercise~\l_tmp_examproblemid_tl \space
                            with~exercise~\l_tmp_replacedbyexamproblemid_tl \space
                            because~current~academic~year~is~\l_exercise_book_academic_year_tl, \space
                            but~we~need~to~wait~till~academic~year~\l_academic_year_replacementsinceacademicyear_tl \space
                            to~make~the~replacement.
                          }
                        \typeout { \tl_use:N \l_mymsg_tl }
                      }
                  }
                  {
                    \PackageError{exercise-book}{Missing~replacementsinceacademicyear}{Missing~replacementsinceacademicyear}
                  }
              }
              {
                \GetExercisePropertyTF { replacementsinceacademicyear }
                  {
                    \PackageError{exercise-book}{Extra~replacementsinceacademicyear}{Extra~replacementsinceacademicyear}
                  }
              }
          }
      }
  }

\ExplSyntaxOff


%%% ----------------------------------------------------------------
%%% Property and environment to add additional information
%%% ----------------------------------------------------------------

\ifLaTeXTwentyFive

%%% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%%% If LaTeX >= 2025/06/01: use an environment with +c specification
%%% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

% Define a property for additional informations
\DeclareExerciseProperty{additionalinformation}

% Store additional information code in the exercise metadata
\ExplSyntaxOn

\tl_new:N \l__additionalinformation_content_tl

\NewDocumentEnvironment{additionalinformation}{+c}
  {
    % Store the current exercise type and ID
    \edef\ExerciseType{\csname g_xsim_exercise_type_tl\endcsname}
    \edef\ExerciseID{\csname g_xsim_exercise_id_tl\endcsname}

    % Store the code block as a property of the exercise
    \SetExerciseProperty{additionalinformation}
      {
        % Normalize line endings to ^^J
        \tl_set:Nn \l__additionalinformation_content_tl {#1}
        \tl_replace_all:Nnn \l__additionalinformation_content_tl {\obeyedline} {^^J}

        % Evaluate the string for storage
        \exp_args:Nx \scantokens {
          \tl_to_str:N \l__additionalinformation_content_tl
        }
      }
  }
  {}

\ExplSyntaxOff

\else

%%% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%%% Else LaTeX < 2025/06/01: write to to the xsim work directory
%%% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

% Define a property for additional informations
\DeclareExerciseProperty{additionalinformationfilename}

% Store additional information code in the exercise metadata
\NewDocumentEnvironment{additionalinformation}{}
  {
    % Store the current exercise type and ID
    \edef\ExerciseType{\csname g_xsim_exercise_type_tl\endcsname}
    \edef\ExerciseID{\csname g_xsim_exercise_id_tl\endcsname}

    % Store the file containing the code as a property of the exercise
    \edef\additionalinformationfilename{xsim-files-\jobname/\jobname-\ExerciseType-\exercisebookprefix\ExerciseID-additional-solution.tex}
    \edef\setexerciseproperty{\noexpand\SetExerciseProperty{additionalinformationfilename}{\additionalinformationfilename}}
    \setexerciseproperty
    \XSIMfilewritestart{\additionalinformationfilename}%
  }
  {
    \XSIMfilewritestop
  }

%%% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%%% End if LaTeX >= 2025/06/01
%%% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
\fi

%%% ----------------------------------------------------------------
%%% Attach links to solution and additional information
%%% ----------------------------------------------------------------
\xsimsetup{
  exercise/post-hook = {%
    \edef\solref{sol:\exercisebookprefix\GetExerciseProperty{id}}%
    \noindent\textbf{Go to:} {\itshape\linktoxsimenv{\solref}{solution}}.%
  },
  solution/post-hook = {%
    \edef\addref{add:\exercisebookprefix\GetExerciseProperty{id}}%
    \noindent\textbf{Go to:} {\itshape\linktoxsimenv{\addref}{additional information}}.%
  }
}

%%% ----------------------------------------------------------------
%%% Helper: check if label exists
%%% ----------------------------------------------------------------

\makeatletter
\newcommand{\labelExists}[1]{%
  \ifcsname r@#1\endcsname
    \expandafter\@firstoftwo
  \else
    \expandafter\@secondoftwo
  \fi
}
\makeatother

%%% ----------------------------------------------------------------
%%% Solution printing by section and subsection
%%% ----------------------------------------------------------------

% Declare max number of chapters, sections, and subsections
\newcounter{chap}
\newcounter{sec}
\newcounter{subsec}
\newcount\maxchap
\newcount\maxsec
\newcount\maxsubsec
\maxchap=1
\maxsec=100
\maxsubsec=100

% Declare an if that evaluates to true if the exercise is in the current chapter, section or subsection.
\newif\ifexerciseincurrentsection

% Count how many additional information environment have been printed, in order to have an anchor for the links.
% Note that it is done here, rather than in the actual additionalinformation environments, because the
% content is actually displayed in this part of the code.
\newcounter{printedadditionalinformation}

% An internal environment that steps the printedadditionalinformation counter and adds label.
% Will be used by the next \PrintExercisePropertySectionBySection, and must never be written
% explicitly by end users.
\newenvironment{additionalinformationinternal}[1]{
  \refstepcounter{printedadditionalinformation}%
  \label{add:\exercisebookprefix#1}%
  \LabelToExercisePrintedCounter{add:\exercisebookprefix#1}%
  \GetExercisePropertyT{examproblemid}{%
    \edef\ExerciseExamProblemID{\GetExerciseProperty{examproblemid}}%
    \label{add:\ExerciseExamProblemID}%
    \LabelToExercisePrintedCounter{add:\ExerciseExamProblemID}%
  }%
  \solutionHeading{#1}%
}{\par}

% Print solutions grouped by section and subsection
\newcommand{\PrintExercisePropertySectionBySection}[1]{%
  \setcounter{chap}{1}%
  \whileboolexpr{ test {\ifnumless{\value{chap}}{\numexpr\maxchap+1\relax}} }{%
    \setcounter{sec}{0}%
    \whileboolexpr{ test {\ifnumless{\value{sec}}{\numexpr\maxsec+1\relax}} }{%
      \ifnum\value{sec}>0%
        \edef\secref{sec:\exercisebookprefix\arabic{chap}.\arabic{sec}}%
      \else%
        \edef\secref{chap:\exercisebookprefix\arabic{chap}}%
      \fi%
      \labelExists{\secref}{%
        \ifnum\value{sec}>0%
          \section{\linktosection{\secref}}%
        \fi%
        \setcounter{subsec}{0}%
        \whileboolexpr{ test {\ifnumless{\value{subsec}}{\numexpr\maxsubsec+1\relax}} }{%
          \ifnum\value{subsec}>0%
            \edef\subsecref{sec:\exercisebookprefix\arabic{chap}.\arabic{sec}.\arabic{subsec}}%
          \else%
            \ifnum\value{sec}>0%
              \edef\subsecref{sec:\exercisebookprefix\arabic{chap}.\arabic{sec}}%
            \else%
              \edef\subsecref{chap:\exercisebookprefix\arabic{chap}}%
            \fi%
          \fi%
          \labelExists{\subsecref}{%
            \ifnum\value{subsec}>0%
              \subsection{\linktosection{\subsecref}}%
            \fi%
            \ForEachUsedExerciseByType{%
              \IfExercisePrintT{##1}{##2} {%
                \exerciseincurrentsectionfalse
                \ifnum\ExercisePropertyGet{##1}{##2}{chapter-value}=\value{chap}
                  \ifnum\ExercisePropertyGet{##1}{##2}{section-value}=0
                    \ifnum\value{sec}=0
                      \exerciseincurrentsectiontrue
                    \fi
                  \else
                    \ifnum\ExercisePropertyGet{##1}{##2}{section-value}=\value{sec}
                      \ifnum\ExercisePropertyGet{##1}{##2}{subsection-value}=0
                        \ifnum\value{subsec}=0
                          \exerciseincurrentsectiontrue
                        \fi
                      \else
                        \ifnum\ExercisePropertyGet{##1}{##2}{subsection-value}=\value{subsec}
                          \exerciseincurrentsectiontrue
                        \fi
                      \fi
                    \fi
                  \fi
                \fi
                \ifexerciseincurrentsection
                  \stepcounter{pynotebook}% increment counter of tex-notebook package
                  \IfStrEq{#1}{solution}{%
                    \GetExercisePropertyTF{hassolution}{%
                      \XSIMprint{solution}{exercise}{##2}%
                    }{%
                      \PackageError{exercise-book}{Missing solution}{Solution is missing for ##1 ##2}%
                    }%
                  }{%
                    \IfStrEq{#1}{additionalinformation}{%
                      \begin{additionalinformationinternal}{##2}
                      \ifPythonTeXLoaded
                      \edef\attachnotebooknametopythontex{\pyc{pytex.notebook_filename = os.path.join(f"notebooks-{pytex.jobname}", f"additional_information_\GetExerciseProperty{printedcounter}.ipynb")}}
                      \attachnotebooknametopythontex
                      \fi
                      \ifLaTeXTwentyFive%
                        \GetExercisePropertyTF{additionalinformation}{%
                          ####1%
                        }{%
                          \PackageError{exercise-book}{Missing additional information}{additional information is missing for ##1 ##2}%
                        }%
                      \else%
                        \GetExercisePropertyTF{additionalinformationfilename}{%
                          \input{####1}%
                        }{%
                          \PackageError{exercise-book}{Missing additional information}{additional information is missing for ##1 ##2}%
                        }%
                      \fi%
                      \end{additionalinformationinternal}
                      \edef\solref{sol:\exercisebookprefix\GetExerciseProperty{id}}%
                      \noindent\textbf{Go back to:} {\itshape\linktoxsimenv{\solref}{solution}}.%
                    }{%
                      \PackageError{exercise-book}{Unknown solution type '#1'}{Expected 'solution' or 'additionalinformation'}%
                    }%
                  }%
                \fi
              }%
            }%
            \stepcounter{subsec}%
          }{%
            \setcounter{subsec}{\numexpr\maxsubsec+1\relax}%
          }%
        }%
        \stepcounter{sec}%
      }{%
        \setcounter{sec}{\numexpr\maxsec+1\relax}%
      }%
    }%
    \stepcounter{chap}%
  }%
}

%%% ----------------------------------------------------------------
%%% Validation checks for properties
%%% ----------------------------------------------------------------

\newcommand{\AssertPropertyInAllExercises}[1]{%
  \IfStrEq{#1}{solution}{%
    \ForEachUsedExerciseByType{%
      \GetExercisePropertyTF{hassolution}{}{%
        \PackageError{exercise-book}{Exercise ##2 has no solution}{}
      }%
    }%
  }{%
    \IfStrEq{#1}{additionalinformation}{%
      \ForEachUsedExerciseByType{%
        \ifLaTeXTwentyFive%
          \GetExercisePropertyTF{additionalinformation}{}{%
            \PackageError{exercise-book}{Exercise ##2 has no additional information}{}
          }%
        \else%
          \GetExercisePropertyTF{additionalinformationfilename}{}{%
            \PackageError{exercise-book}{Exercise ##2 has no additional information}{}
          }%
        \fi%
      }%
    }{%
      \PackageError{exercise-book}{Unknown solution type '#1'}{Expected 'solution' or 'additionalinformation'}%
    }%
  }%
}

%%% ----------------------------------------------------------------
%%% Cleveref configuration
%%% ----------------------------------------------------------------

\makeatletter
% Helper to print a single label with prefix and safeguards
% #1 = label, #2 = prefix text to use (can be empty)
\newcommand{\exercisebook@printlabel}[2]{%
  \expandafter\ifx\csname exercisebook@printedcounter@#1\endcsname\relax
    \PackageWarning{exercise-book}{No printed counter stored for label `#1`}{}%
    \hyperref[#1]{#2\textbf{??}}%
  \else
    \expandafter\let\expandafter\currentprintedcounter\csname exercisebook@printedcounter@#1\endcsname
    \ifx\currentprintedcounter\@empty
      \PackageError{exercise-book}{Macro for label `#1` is empty}{The printed counter macro contains no value}%
    \else
      \hyperref[#1]{#2\currentprintedcounter}%
    \fi
  \fi
}

% Helper function to override default cref commands
\newcommand{\exercisebook@crefoverride}[2]{%
  % Get first label (whole arg if no comma)%
  \IfSubStr{#1}{,}{%
    \StrBefore{#1}{,}[\firstlabel]%
  }{%
    \edef\firstlabel{#1}%
  }%
  % Decide if we handle it (ex:/sol:/add:)%
  \def\singulartext{}\def\pluraltext{}\def\currentprefix{}%
  \ifboolexpr{ test {\IfBeginWith{\firstlabel}{ex:}} }{%
    \def\singulartext{Exercise~}%
    \def\pluraltext{Exercises~}%
    \def\currentprefix{ex:}%
  }{%
  \ifboolexpr{ test {\IfBeginWith{\firstlabel}{sol:}} }{%
    \def\singulartext{the solution of Exercise~}%
    \def\pluraltext{the solutions of Exercises~}%
    \def\currentprefix{sol:}%
  }{%
  \ifboolexpr{ test {\IfBeginWith{\firstlabel}{add:}} }{%
    \def\singulartext{the additional information for Exercise~}%
    \def\pluraltext{the additional information for Exercises~}%
    \def\currentprefix{add:}%
  }{}%
  }}%
  % If not special, pass through untouched to original \cref/\Cref and stop%
  \ifx\currentprefix\@empty
    #2{#1}\ignorespaces%
  \else
    % Build flat comma-separated list without a leading comma, and count labels%
    \def\labelcount{0}%
    \def\labelslist{}%
    \edef\remaininglabels{#1}%
    \loop
      \StrCut{\remaininglabels}{,}{\thislabel}{\remaininglabels}%
      \IfBeginWith{\thislabel}{\currentprefix}{}{%
        \PackageError{exercise-book}{All labels must have the same prefix}{Label `\thislabel' does not match prefix `\currentprefix'.}%
      }%
      \ifnum\labelcount=0 %
        \edef\labelslist{\thislabel}%
      \else
        \edef\labelslist{\labelslist,\thislabel}%
      \fi
      \edef\labelcount{\the\numexpr\labelcount+1\relax}%
    \ifx\remaininglabels\@empty
    \else
    \repeat
    % Choose singular/plural prefix text%
    \ifnum\labelcount>1 \edef\prefixtext{\pluraltext}\else \edef\prefixtext{\singulartext}\fi
    % First label with prefix%
    \IfSubStr{\labelslist}{,}{%
      \StrBefore{\labelslist}{,}[\firstlabel]%
    }{%
      \edef\firstlabel{\labelslist}%
    }%
    \exercisebook@printlabel{\firstlabel}{\prefixtext}%
    % Remaining labels (only if any)%
    \def\restlabels{\labelslist}%
    \StrCut{\restlabels}{,}{\dummy}{\restlabels}%
    \ifx\restlabels\@empty\else
      \newcount\idx \idx=0 %
      \loop
        \StrCut{\restlabels}{,}{\thislabel}{\restlabels}%
        \advance\idx by 1\relax
        \ifnum\idx=\numexpr\labelcount-1\relax \def\delim{~and~}\else \def\delim{,~}\fi
        \delim\exercisebook@printlabel{\thislabel}{}%
      \ifx\restlabels\@empty
      \else
      \repeat
    \fi
  \fi
}

% Redefine \cref and \Cref
\makeatletter
\NewCommandCopy\exercisebook@oldcref\cref
\NewCommandCopy\exercisebook@oldCref\Cref
\RenewDocumentCommand{\cref}{m}{\exercisebook@crefoverride{#1}{\exercisebook@oldcref}}
\RenewDocumentCommand{\Cref}{m}{\exercisebook@crefoverride{#1}{\exercisebook@oldCref}}
\makeatother
